package at.steinbacher.geckopose

import android.graphics.Color
import at.steinbacher.geckoposelib.data.*
import com.google.mlkit.vision.pose.PoseLandmark

val tennisConfiguration = GeckoPoseConfiguration(
    tag = "main_pose",
    pointConfigurations = listOf(
        PointConfiguration(type = PoseLandmark.LEFT_SHOULDER, color = Color.CYAN, selectedColor = Color.RED),
        PointConfiguration(type = PoseLandmark.LEFT_ELBOW, color = Color.CYAN, selectedColor = Color.RED),
        PointConfiguration(type = PoseLandmark.LEFT_WRIST, color = Color.CYAN, selectedColor = Color.RED),
        PointConfiguration(type = PoseLandmark.RIGHT_SHOULDER, color = Color.CYAN, selectedColor = Color.RED),
        PointConfiguration(type = PoseLandmark.RIGHT_ELBOW, color = Color.CYAN, selectedColor = Color.RED),
        PointConfiguration(type = PoseLandmark.RIGHT_WRIST, color = Color.CYAN, selectedColor = Color.RED),
        PointConfiguration(type = PoseLandmark.LEFT_HIP, color = Color.CYAN, selectedColor = Color.RED),
        PointConfiguration(type = PoseLandmark.RIGHT_HIP, color = Color.CYAN, selectedColor = Color.RED),
        PointConfiguration(type = PoseLandmark.LEFT_KNEE, color = Color.CYAN, selectedColor = Color.RED),
        PointConfiguration(type = PoseLandmark.RIGHT_KNEE, color = Color.CYAN, selectedColor = Color.RED),
        PointConfiguration(type = PoseLandmark.LEFT_ANKLE, color = Color.CYAN, selectedColor = Color.RED),
        PointConfiguration(type = PoseLandmark.RIGHT_ANKLE, color = Color.CYAN, selectedColor = Color.RED),
        PointConfiguration(type = PoseLandmark.LEFT_HEEL, color = Color.CYAN, selectedColor = Color.RED),
        PointConfiguration(type = PoseLandmark.RIGHT_HEEL, color = Color.CYAN, selectedColor = Color.RED),
        PointConfiguration(type = PoseLandmark.LEFT_FOOT_INDEX, color = Color.CYAN, selectedColor = Color.RED),
        PointConfiguration(type = PoseLandmark.RIGHT_FOOT_INDEX, color = Color.CYAN, selectedColor = Color.RED),
        PointConfiguration(type =PoseLandmark.LEFT_PINKY, color = Color.CYAN, selectedColor = Color.RED),
        PointConfiguration(type =PoseLandmark.RIGHT_PINKY, color = Color.CYAN, selectedColor = Color.RED),
        PointConfiguration(type =PoseLandmark.LEFT_INDEX, color = Color.CYAN, selectedColor = Color.RED),
        PointConfiguration(type =PoseLandmark.RIGHT_INDEX, color = Color.CYAN, selectedColor = Color.RED),
        ),
    lineConfigurations = listOf(
        LineConfiguration(start = PoseLandmark.LEFT_SHOULDER, end = PoseLandmark.LEFT_ELBOW, tag = "left_shoulder_elbow", color = Color.BLUE),
        LineConfiguration(start = PoseLandmark.LEFT_ELBOW, end = PoseLandmark.LEFT_WRIST, tag = "left_elbow_wrist", color = Color.BLUE),
        LineConfiguration(start = PoseLandmark.LEFT_SHOULDER, end = PoseLandmark.RIGHT_SHOULDER, tag = "shoulder_shoulder", color = Color.BLUE),
        LineConfiguration(start = PoseLandmark.RIGHT_SHOULDER, end = PoseLandmark.RIGHT_ELBOW, tag = "right_shoulder_elbow", color = Color.BLUE),
        LineConfiguration(start = PoseLandmark.RIGHT_ELBOW, end = PoseLandmark.RIGHT_WRIST, tag = "right_elbow_wrist", color = Color.BLUE),
        LineConfiguration(start = PoseLandmark.RIGHT_SHOULDER, end = PoseLandmark.RIGHT_HIP, tag = "right_shoulder_hip", color = Color.BLUE),
        LineConfiguration(start = PoseLandmark.LEFT_SHOULDER, end = PoseLandmark.LEFT_HIP, tag = "left_shoulder_hip", color = Color.BLUE),
        LineConfiguration(start = PoseLandmark.LEFT_HIP, end = PoseLandmark.LEFT_KNEE, tag = "left_hip_shoulder", color = Color.BLUE),
        LineConfiguration(start = PoseLandmark.LEFT_HIP, end = PoseLandmark.RIGHT_HIP, tag = "left_hip_right_hip", color = Color.BLUE),
        LineConfiguration(start = PoseLandmark.RIGHT_HIP, end = PoseLandmark.RIGHT_KNEE, tag = "right_hip_shoulder", color = Color.BLUE),
        LineConfiguration(start = PoseLandmark.LEFT_KNEE, end = PoseLandmark.LEFT_ANKLE, tag = "left_knee_ankle", color = Color.BLUE),
        LineConfiguration(start = PoseLandmark.RIGHT_KNEE, end = PoseLandmark.RIGHT_ANKLE, tag = "right_knee_ankle", color = Color.BLUE),
        LineConfiguration(start = PoseLandmark.RIGHT_HEEL, end = PoseLandmark.RIGHT_FOOT_INDEX, tag = "right_heel_foot_index", color = Color.BLUE),
        LineConfiguration(start = PoseLandmark.LEFT_HEEL, end = PoseLandmark.LEFT_FOOT_INDEX, tag = "left_heel_foot_index", color = Color.BLUE),
        LineConfiguration(start = PoseLandmark.LEFT_PINKY, end = PoseLandmark.LEFT_INDEX, tag = "left_pinky_index", color = Color.BLUE),
        LineConfiguration(start = PoseLandmark.RIGHT_PINKY, end = PoseLandmark.RIGHT_INDEX, tag = "right_pinky_index", color = Color.BLUE),
    ),
    angleConfigurations = listOf(
        AngleConfiguration(startPointType = PoseLandmark.LEFT_SHOULDER, middlePointType = PoseLandmark.LEFT_ELBOW,
            endPointType = PoseLandmark.LEFT_WRIST, tag = "left_a", color = Color.GRAY),
        AngleConfiguration(startPointType = PoseLandmark.RIGHT_SHOULDER, middlePointType = PoseLandmark.RIGHT_ELBOW,
            endPointType = PoseLandmark.RIGHT_WRIST, tag = "right_a", color = Color.GRAY),
        AngleConfiguration(startPointType = PoseLandmark.LEFT_ELBOW, middlePointType = PoseLandmark.LEFT_SHOULDER,
            endPointType = PoseLandmark.LEFT_HIP, tag = "left_b", color = Color.GRAY),
        AngleConfiguration(startPointType = PoseLandmark.RIGHT_HIP, middlePointType = PoseLandmark.RIGHT_SHOULDER,
            endPointType = PoseLandmark.RIGHT_ELBOW, tag = "right_b", color = Color.GRAY),
        AngleConfiguration(startPointType = PoseLandmark.LEFT_SHOULDER, middlePointType = PoseLandmark.LEFT_HIP,
            endPointType = PoseLandmark.LEFT_KNEE, tag = "left_c", color = Color.GRAY),
        AngleConfiguration(startPointType = PoseLandmark.RIGHT_KNEE, middlePointType = PoseLandmark.RIGHT_HIP,
            endPointType = PoseLandmark.RIGHT_SHOULDER, tag = "right_c", color = Color.GRAY),
        AngleConfiguration(startPointType = PoseLandmark.LEFT_ANKLE, middlePointType = PoseLandmark.LEFT_KNEE,
            endPointType = PoseLandmark.LEFT_HIP, tag = "left_d", color = Color.GRAY),
        AngleConfiguration(startPointType = PoseLandmark.RIGHT_ANKLE, middlePointType = PoseLandmark.RIGHT_KNEE,
            endPointType = PoseLandmark.RIGHT_HIP, tag = "right_d", color = Color.GRAY),
    ),
    poseCenterPointsTargets = listOf(PoseLandmark.LEFT_SHOULDER, PoseLandmark.RIGHT_SHOULDER, PoseLandmark.LEFT_HIP, PoseLandmark.RIGHT_HIP)
)
